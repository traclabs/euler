<?xml version="1.0"?>
<launch>

  <arg name="robot"      default="true" />
  <arg name="gui"        default="true" />
  <arg name="world"      default="new_format_empty" /> <!-- "new_format_empty" /> -->
  <arg name="world_path" default="$(find euler_gazebo)/worlds" /> 
  <arg name="gravity"    default="true" />
  <arg name="debug"      default="false" />
  <arg name="i_control"  default="false" />
  <arg name="octomap"    default="false" />
  <arg name="x"          default="0" />
  <arg name="y"          default="0" />
  <arg name="yaw"        default="0" />
  <arg name="paused"     default="false" />

   
  <param name="use_gui" value="false" />
  <param name="/use_sim_time" value="true"/>

  <group if="$(arg gravity)">
    <param name="/gravity/x" value="0"/>
    <param name="/gravity/y" value="0"/>
    <param name="/gravity/z" value="-9.8"/>
  </group>

  <!-- load world -->
  <group unless="$(arg paused)">
    <node name="gazebo" pkg="gazebo_ros" type="debug" args="$(arg world_path)/$(arg world).world" output="screen" respawn="false" if="$(arg debug)"/>
    <node name="gazebo" pkg="gazebo_ros" type="gzserver" args="--verbose $(arg world_path)/$(arg world).world" output="screen" respawn="false" unless="$(arg debug)"/>
  </group>

  <group if="$(arg paused)">
    <node name="gazebo" pkg="gazebo_ros" type="debug" args="$(arg world_path)/$(arg world).world -u" output="screen" respawn="false" if="$(arg debug)"/>
    <node name="gazebo" pkg="gazebo_ros" type="gzserver" args="--verbose $(arg world_path)/$(arg world).world -u" output="screen" respawn="false" unless="$(arg debug)"/>
  </group>


  <!-- load robot -->
  <group if="$(arg robot)">
    <param name="euler/robot_description" command="$(find xacro)/xacro --inorder '$(find euler_gazebo)/urdf/euler_gazebo.xacro'" />
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find euler_gazebo)/urdf/euler_gazebo.xacro'" />
    <node name="spawn_euler" pkg="gazebo_ros" type="spawn_model" 
      args="-urdf -param robot_description -model euler -paused=false -x $(arg x) -y $(arg y) -Y $(arg yaw)" 
      respawn="false" output="screen" />
  </group>

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find euler_gazebo)/config/controllers/euler_gazebo_generic_traj_control.yaml" command="load"/>

  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="euler" args=" mobile_base_controller arm_controller joint_state_controller" />

  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen"/>

  <!-- remap js -->
  <node name="js_remap" pkg="topic_tools" type="relay" respawn="true" output="screen" args="/euler/joint_states /joint_states"/>

  <!-- start gui -->
  <node name="gazebo_gui" pkg="gazebo_ros" type="gzclient" respawn="false" output="screen" if="$(arg gui)"/>

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find euler_support)/config/euler_craftsman.rviz" required="true" />

  <node name="model_states_converter" pkg="tracbot_gazebo" type="model_states_converter" >
   <param name="model_name" value="euler"/>
   <param name="tf_base_frame" value="base_link"/>
   <param name="tf_publish_frame" value="perfect_odom"/>   
   <param name="tf_odom_frame" value="odom"/>
  </node>

  <!-- <node pkg="tf" type="static_transform_publisher" name="bl_broadcaster" args="0 0 0 0 0 0 world base_link 100" /> -->
  <node pkg="tf" type="static_transform_publisher" name="bl_broadcaster" args="0 0 0 0 0 0 map perfect_odom 100" /> -->
  <!-- <node pkg="tf" type="static_transform_publisher" name="bf_broadcaster" args="0 0 0 0 0 0 vetex_base_footprint base_footprint 100" /> -->
  
  <!-- reference frame broadcaster for moveit -->
  <!-- <node pkg="tf" type="static_transform_publisher" name="odom_broadcaster" args="0 0 0 0 0 0 map perfect_odom 100" />  -->

</launch>
  
